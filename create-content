#!/usr/bin/env node

require('rubico/global')
const Transducer = require('rubico/Transducer')
const x = require('rubico/x')
const cronist = require('cronist')
const fs = require('fs')
const FileSystem = require('./internal/FileSystem')
const walkPathForJSFilePaths = require('./internal/walkPathForJSFilePaths')
const { inspect } = require('util')

const readFileUtf8 = path => fs.promises.readFile(path, { encoding: 'utf8' })

const createMdastFile = async function (source, dest, options = {}) {
  await pipe(source, [
    readFileUtf8,
    cronist.parseMarkdown,
    data => fs.promises.writeFile(dest, `
export default ${inspect(data, { depth: Infinity, maxArrayLength: null })}
  `.trim()),
  ])
}

const createCronistFile = async function (source, dest, options = {}) {
  const { requiredKeys, ignoreDirs } = options
  await pipe(source, [
    curry.arity(2, walkPathForJSFilePaths, __, { ignoreDirs }),

    flatMap(async fileName => pipe(fileName, [
      readFileUtf8,
      cronist,
      map(assign({ fileName: always(fileName) })),
    ])),

    data => fs.promises.writeFile(dest, `
export default ${inspect(data, { depth: Infinity, maxArrayLength: null })}
  `.trim()),
  ])
}

// createMdast() -> Promise<>
const createMdast = async function () {
  const publicFs = new FileSystem({ cwd: `${__dirname}/public` })

  console.log('Creating mdast/readme.js')
  await createMdastFile(
    // `${__dirname}/node_modules/rubico/README.md`,
    `${__dirname}/../rubico/README.md`, // uncomment for local changes
    `${__dirname}/public/mdast/readme.js`,
  )

  console.log('Creating mdast/tour.js')
  await createMdastFile(
    `${__dirname}/articles/tour.md`,
    `${__dirname}/public/mdast/tour.js`,
  )

  /*
  console.log('Creating mdast/transducers-v1.js')
  await createMdastFile(
    `${__dirname}/articles/transducers-v1.md`,
    `${__dirname}/public/mdast/transducers-v1.js`,
  )
  */

  const articlesFs = new FileSystem({ cwd: `${__dirname}/articles` })
  for (const path of await articlesFs.find('.')) {
    const filename = path.replace(articlesFs.cwd, '').replace(/^[/.]+/g, '')
    const mdastPath = `mdast/${filename.replace('.md', '.js')}`
    console.log('Creating', mdastPath)
    await createMdastFile(
      `${__dirname}/articles/${filename}`,
      `${__dirname}/public/${mdastPath}`,
    )
  }

  const rubicoVersion = require('rubico/package').version
  const rubicoMajorVersion = rubicoVersion.split('.')[0]
  console.log(`Creating cronist/rubico-v${rubicoMajorVersion}.js`)
  await createCronistFile(
    // `${__dirname}/node_modules/rubico`,
    `${__dirname}/../rubico`, // uncomment for local changes
    `${__dirname}/public/cronist/rubico-v${rubicoMajorVersion}.js`,
    {
      requiredKeys: ['name', 'synopsis', 'description'],
      ignoreDirs: ['node_modules', 'archive'],
    },
  )
}

if (require.main == module) {
  createMdast()
}

module.exports = createMdast
